version: '2.1'

services:

  jenkins:
    image: jenkins/jenkins:lts-jdk17
    restart: unless-stopped
    privileged: true
    container_name: jenkins_lts
    volumes:
       - jenkins_data:/var/jenkins_home
       - jenkins_certs:/certs/client
       - /var/run/docker.sock:/var/run/docker.sock
       - /usr/local/bin/docker:/usr/local/bin/docker
    networks:
      - sonarnet
    ports:
      - '7661:8080'
      - '50000:50000'

  dind_container:
     image: docker:dind
     privileged: true
     volumes:
      - /var/lib/docker
     networks:
      - dind_net

  sonarqube:
    image: sonarqube:lts-community 
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    networks:
      - sonarnet
    ports:
      - '7662:9000'
    environment:
      - sonar.jdbc.username=sonarqubeawesome
      - sonar.jdbc.password=sonarqubeawesome
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar

  db:
    image: postgres
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonarqubeawesome
      - POSTGRES_PASSWORD=sonarqubeawesome
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

networks:
  sonarnet:
    driver: bridge
  dind_net:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:
  jenkins_data:
  jenkins_certs:
  